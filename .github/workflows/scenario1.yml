name: Build and Upload Define.mk

on:  
  workflow_dispatch:  # Allows manual trigger  

jobs:
  check-runner:
    runs-on: ubuntu-latest
    outputs:
      runner_available: ${{ steps.check.outputs.runner_found }}
    steps:
      - name: Check if runner exists
        id: check
        run: |
          RUNNER_NAME="nvrx-build-900"
          RUNNER_STATUS=$(gh api repos/:owner/:repo/actions/runners | jq -r ".runners[] | select(.name==\"$RUNNER_NAME\") | .status")
          if [[ "$RUNNER_STATUS" == "online" ]]; then
            echo "Runner is available"
            echo "runner_found=true" >> "$GITHUB_ENV"
          else
            echo "Runner not found"
            echo "runner_found=false" >> "$GITHUB_ENV"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}

  start-runner:
    needs: check-runner
    if: needs.check-runner.outputs.runner_available == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Start Docker Runner
        run: |
          docker rm -f container-nvrx-build || true
          docker run --name container-nvrx-build \
            -e ENABLE_BUILD_ENV='true' \
            -e ENABLE_GITHUB_RUNNER='true' \
            -e JFROG_JCR_URL='http://192.168.27.92:8082' \
            -e JFROG_JCR_USERNAME='admin' \
            -e JFROG_JCR_PASSWORD='Admin@123' \
            -e JFROG_BUILD_ENV_SCRIPT_REPO_PATH='mx-linux-toolchains/nvrx/rk3588/install-toolchain.sh' \
            -e USER_SUDO_PASSWORD='ubuntu' \
            -e JFROG_GITHUB_ACTION_RUNNER_REPO_PATH='mx-linux-thirdparty-deps/github-actions-runner/github-actions-runner-2.321.0/actions-runner-linux-x64-2.321.0.tar.gz' \
            -e GITHUB_REPO_PATH='matrix-comsec-pvt-ltd/ipvs-nvrx' \
            -e GITHUB_ACCESS_TOKEN='${{ secrets.GITHUB_ACCESS_TOKEN }}' \
            -e GITHUB_ACTION_RUNNER_NAME='nvrx-build-900' \
            -e GITHUB_ACTION_RUNNER_LABELS='nvrx-build-900' \
            -e GITHUB_FORCE_REMOVE_RUNNER='false' \
            nvr-test-build:1.0 &
          sleep 60  # Wait for runner to register

  clone-and-upload:
    needs: start-runner
    runs-on: nvrx-build-900
    steps:
      - name: Clone repository
        run: |
          git clone https://github.com/matrix-comsec-pvt-ltd/ipvs-nvrx.git
          cd ipvs-nvrx
          ls -l

      - name: Upload define.mk to JFrog
        run: |
          curl -u admin:Admin@123 -T ipvs-nvrx/define.mk "http://192.168.27.92:8082/artifactory/poc-test/define.mk"

  stop-runner:
    needs: clone-and-upload
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Stop Docker Runner
        run: |
          docker stop container-nvrx-build || true
          docker rm container-nvrx-build || true
